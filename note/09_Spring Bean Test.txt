09_Spring Bean Test.txt

# Spring context에 등록된 빈 테스트 하기

 - 서버를 실행하지 않으면 spring-context가 생성되지 않는다
 - 당연히 bean들도 로드하지 않는다
 - JUnit 테스트를 진행할 때는 서버가 실행되지 않으므로
   이미 존재하는 설정들을 이용해 테스트용 반을 생성해야 한다
   
# spring-text

 	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-test</artifactId>
	    <version>${org.springframework-version}</version>
	    <scope>test</scope>
	</dependency>
	
# JUnit 테스트에 spring-context 불러 사용하기

	@RunWith(SpringJUnit4ClassRunner.class)
	@ContextConfiguration(
			{
				"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml",
				"file:src/main/webapp/WEB-INF/spring/root-context.xml"
			}
			
		)
		
# Spring Controller Test

 - 컨트롤러는 요청을 븓으면 다음으로 가야하는 뷰를 리턴해주는 역할을 한다.
 - 테스트를 진행하기 위해서는 가짜 요청을 만들어 보내야 한다.
 

 
# 파일 업로드

	[pom.xml]

	<!-- file upload -->
	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>1.4</version>
	</dependency>
	
	[servlet-context.xml]

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="maxUploadSize" value="10485760" />		
	</beans:bean>
	
	
	
	
	
	
	
	